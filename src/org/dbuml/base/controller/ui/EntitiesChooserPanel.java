/**********************************************
*   Copyright (C) 2007 CINCOM SYSTEMS, INC.
*   All Rights Reserved
**********************************************/

package org.dbuml.base.controller.ui;

import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 * Form for choosing database entities.
 * @author  jgrengbondai
 */
public class EntitiesChooserPanel extends javax.swing.JPanel {
    
    private static final String BUNDLE = "org/dbuml/base/i18n/DBUML";
    
    /** Creates new form EntitiesChooserPanel */
    public EntitiesChooserPanel() {
        initComponents();
    }
    
    /**
     * Initializes the form with data.
     * @param data The data.
     */
    public void initScreen(String[] data) {
        clearScreen();
        this.populateLeftList(data);
    }
    
    private void populateLeftList(final String[] data) {
        MyListModel model = (MyListModel) this.leftList.getModel();
        model.addData(data);
        this.moveRightButton.setEnabled(false);
        this.moveLeftButton.setEnabled(false);
        this.moveAllLeftButton.setEnabled(false);
        this.moveAllRightButton.setEnabled(data.length > 0);
    }
    
    /**
     * Gets selected data.
     * @return An arry of selected data.
     */
    public String[] getChosenElements() {
        MyListModel model = (MyListModel) this.rightList.getModel(); 
        final String[] data = new String[model.getSize()];
        model.copyInto(data);
        return data;
    }
    
    /**
     * Determine whether or not the list on the right has data.
     * @return boolean flag.
     */
    public boolean hasChosenData() {
        return this.rightList.getModel().getSize() > 0;    
    }
    
    private void clearScreen() {
        javax.swing.ListModel model = this.leftList.getModel();
        if (model instanceof MyListModel) {
            ((MyListModel) model).removeAllElements();
        }
        model = this.rightList.getModel();
        if (model instanceof MyListModel) {
            ((MyListModel) model).removeAllElements();
        }
    }
    
    private void transferAllData(MyListModel from, MyListModel to) {
        to.addData(from.toArray());
        from.removeAllElements();
    }
    
    private void transferSelectedItems(JList from, JList to) {
        Object[] objs = from.getSelectedValues();
        MyListModel toModel = (MyListModel)to.getModel();
        toModel.addData(objs);
         
        MyListModel fromModel = (MyListModel)from.getModel();
        for (int i = 0; i < objs.length; i++) {
            fromModel.removeElement(objs[i]);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel2 = new javax.swing.JPanel();
        msgLabel = new javax.swing.JLabel();
        centerPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        leftList = new javax.swing.JList();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        operPanel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        moveRightButton = new javax.swing.JButton();
        moveLeftButton = new javax.swing.JButton();
        moveAllRightButton = new javax.swing.JButton();
        moveAllLeftButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rightList = new javax.swing.JList();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        setMinimumSize(new java.awt.Dimension(455, 223));
        setPreferredSize(new java.awt.Dimension(455, 247));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 1, 1, 1));
        msgLabel.setText(java.util.ResourceBundle.getBundle(BUNDLE).getString("MOVE_DATA_HINT"));
        jPanel2.add(msgLabel);

        add(jPanel2, java.awt.BorderLayout.NORTH);

        centerPanel.setLayout(new java.awt.GridLayout(1, 3));

        centerPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jPanel3.setMinimumSize(new java.awt.Dimension(102, 167));
        jPanel3.setPreferredSize(new java.awt.Dimension(102, 167));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(80, 65));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(80, 65));
        leftList.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        leftList.setModel(new MyListModel());
        leftList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                leftListValueChanged(evt);
            }
        });

        jScrollPane1.setViewportView(leftList);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel3.setText(java.util.ResourceBundle.getBundle(BUNDLE).getString("LIST_AVAIL"));
        jPanel8.add(jLabel3);

        jPanel3.add(jPanel8, java.awt.BorderLayout.NORTH);

        centerPanel.add(jPanel3);

        operPanel.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.GridLayout(0, 3));

        jPanel7.add(jLabel1);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.GridLayout(4, 0));

        moveRightButton.setText(">");
        moveRightButton.setToolTipText(java.util.ResourceBundle.getBundle(BUNDLE).getString("MOVE_DATA_TO_RIGHT"));
        moveRightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveRightButtonActionPerformed(evt);
            }
        });

        jPanel6.add(moveRightButton);

        moveLeftButton.setText("<");
        moveLeftButton.setToolTipText(java.util.ResourceBundle.getBundle(BUNDLE).getString("MOVE_DATA_TO_LEFT"));
        moveLeftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveLeftButtonActionPerformed(evt);
            }
        });

        jPanel6.add(moveLeftButton);

        moveAllRightButton.setText(">>");
        moveAllRightButton.setToolTipText(java.util.ResourceBundle.getBundle(BUNDLE).getString("MOVE_ALL_DATA_TO_RIGHT"));
        moveAllRightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveAllRightButtonActionPerformed(evt);
            }
        });

        jPanel6.add(moveAllRightButton);

        moveAllLeftButton.setText("<<");
        moveAllLeftButton.setToolTipText(java.util.ResourceBundle.getBundle(BUNDLE).getString("MOVE_ALL_DATA_TO_LEFT"));
        moveAllLeftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveAllLeftButtonActionPerformed(evt);
            }
        });

        jPanel6.add(moveAllLeftButton);

        jPanel5.add(jPanel6, java.awt.BorderLayout.WEST);

        jPanel7.add(jPanel5);

        jPanel7.add(jLabel2);

        operPanel.add(jPanel7, java.awt.BorderLayout.CENTER);

        centerPanel.add(operPanel);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        jPanel4.setMinimumSize(new java.awt.Dimension(102, 167));
        jPanel4.setPreferredSize(new java.awt.Dimension(102, 167));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(80, 65));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(80, 65));
        rightList.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        rightList.setModel(new MyListModel());
        rightList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                rightListValueChanged(evt);
            }
        });

        jScrollPane2.setViewportView(rightList);

        jPanel4.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jLabel4.setText(java.util.ResourceBundle.getBundle(BUNDLE).getString("LIST_IMPORT_CHOSEN"));
        jPanel9.add(jLabel4);

        jPanel4.add(jPanel9, java.awt.BorderLayout.NORTH);

        centerPanel.add(jPanel4);

        add(centerPanel, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

    private void rightListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_rightListValueChanged
        this.moveLeftButton.setEnabled(rightList.getSelectedIndex() >= 0);
        evt.getFirstIndex(); // to keep PMD quiet!
    }//GEN-LAST:event_rightListValueChanged

    private void leftListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_leftListValueChanged
        this.moveRightButton.setEnabled(leftList.getSelectedIndex() >= 0);
        evt.getFirstIndex(); // to keep PMD quiet!
    }//GEN-LAST:event_leftListValueChanged

    private void moveAllLeftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveAllLeftButtonActionPerformed
        this.transferAllData((MyListModel) this.rightList.getModel(),  (MyListModel) this.leftList.getModel());
        this.moveAllRightButton.setEnabled(leftList.getModel().getSize() > 0);
        evt.getID(); // to keep PMD quiet!
    }//GEN-LAST:event_moveAllLeftButtonActionPerformed

    private void moveAllRightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveAllRightButtonActionPerformed
        this.transferAllData((MyListModel)this.leftList.getModel(),  (MyListModel)this.rightList.getModel());
        this.moveAllLeftButton.setEnabled(rightList.getModel().getSize() > 0);
        evt.getID(); // to keep PMD quiet!
    }//GEN-LAST:event_moveAllRightButtonActionPerformed

    private void moveLeftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveLeftButtonActionPerformed
        this.transferSelectedItems(this.rightList, this.leftList);
        this.moveAllRightButton.setEnabled(leftList.getModel().getSize() > 0);
        evt.getID(); // to keep PMD quiet!
    }//GEN-LAST:event_moveLeftButtonActionPerformed

    private void moveRightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveRightButtonActionPerformed
        this.transferSelectedItems(this.leftList, this.rightList);
        this.moveAllLeftButton.setEnabled(rightList.getModel().getSize() > 0);
        evt.getID(); // to keep PMD quiet!
    }//GEN-LAST:event_moveRightButtonActionPerformed
    
    private static class MyListModel extends DefaultListModel {
        MyListModel() {
        }
        public void addData(Object[] objs) {
            if (objs != null) {
                for (int i = 0; i < objs.length; i++) {
                    this.addElement(objs[i]);
                }
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel centerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList leftList;
    private javax.swing.JButton moveAllLeftButton;
    private javax.swing.JButton moveAllRightButton;
    private javax.swing.JButton moveLeftButton;
    private javax.swing.JButton moveRightButton;
    private javax.swing.JLabel msgLabel;
    private javax.swing.JPanel operPanel;
    private javax.swing.JList rightList;
    // End of variables declaration//GEN-END:variables
    
}
